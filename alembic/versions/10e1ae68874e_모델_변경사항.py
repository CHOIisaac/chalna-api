"""모델 변경사항

Revision ID: 10e1ae68874e
Revises: cbc8f2b8be6c
Create Date: 2025-09-06 18:00:57.564896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10e1ae68874e'
down_revision: Union[str, Sequence[str], None] = 'cbc8f2b8be6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ledgers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('ledgers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('schedules', 'event_date',
               existing_type=sa.DATE(),
               comment='일정 날짜',
               existing_nullable=False)
    op.alter_column('schedules', 'event_time',
               existing_type=postgresql.TIME(),
               comment='일정 시간',
               existing_nullable=False)
    op.drop_constraint(op.f('schedules_event_id_fkey'), 'schedules', type_='foreignkey')
    op.drop_column('schedules', 'end_time')
    op.drop_column('schedules', 'event_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('schedules', sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='연관된 이벤트 ID'))
    op.add_column('schedules', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='종료 시간'))
    op.create_foreign_key(op.f('schedules_event_id_fkey'), 'schedules', 'events', ['event_id'], ['id'])
    op.alter_column('schedules', 'event_time',
               existing_type=postgresql.TIME(),
               comment=None,
               existing_comment='일정 시간',
               existing_nullable=False)
    op.alter_column('schedules', 'event_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='일정 날짜',
               existing_nullable=False)
    op.alter_column('ledgers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('ledgers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    # ### end Alembic commands ###
